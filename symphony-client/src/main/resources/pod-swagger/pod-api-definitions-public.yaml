definitions:
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
  CompanyCert:
      type: object
      properties:
        pem:
          type: string
          description: An X509 certificate in PEM format
        attributes:
          $ref: '#/definitions/CompanyCertAttributes'
  CompanyCertDetail:
    type: object
    properties:
      companyCertAttributes:
        $ref: '#/definitions/CompanyCertAttributes'
      companyCertInfo:
        $ref: '#/definitions/CompanyCertInfo'
      certInfo:
        $ref: '#/definitions/CertInfo'
  CompanyCertInfoList:
    type: array
    items:
      type: object
      properties:
        companyCertAttributes:
          $ref: '#/definitions/CompanyCertAttributes'
        companyCertInfo:
          $ref: '#/definitions/CompanyCertInfo'
  CompanyCertType:
    type: object
    properties:
      type:
        type: string
        enum:
          - USERSIGNING
          - USER
          - OPERATIONSSIGNING
          - OPERATIONSUSER
  CompanyCertTypeList:
    type: array
    items:
      $ref: '#/definitions/CompanyCertType'
  CompanyCertStatus:
    type: object
    properties:
      type:
        type: string
        enum:
          - TRUSTED
          - KNOWN
          - REVOKED
          - DISABLED
  CompanyCertAttributes:
    type: object
    properties:
      name:
        type: string
        description: Friendly name assigned by administrator
      type:
        $ref: '#/definitions/CompanyCertType'
      status:
        $ref: '#/definitions/CompanyCertStatus'
  CompanyCertInfo:
    type: object
    properties:
      fingerPrint:
        type: string
        description: Unique identifier
      issuerFingerPrint:
        type: string
        description: Unique identifier of issuer cert if known
      lastSeen:
        type: integer
        format: int64
        description: Date when we last saw this certificate presented
      updatedAt:
        type: integer
        format: int64
        description: Date when this cert was last updated by administrator
      updatedBy:
        type: integer
        format: int64
        description: User ID of administrator who last updated this cert
      commonName:
        type: string
        description: The Symphony account name which this certificate authenticates
      expiryDate:
        type: integer
        format: int64
        description: Expiry date of this cert
  CertInfo:
    type: array
    items:
      $ref: '#/definitions/CertInfoItem'
  CertInfoItem:
    type: object
    properties:
      name:
        type: string
      attributes:
        type: array
        items:
          $ref: '#/definitions/NameValuePair'
  NameValuePair:
    type: object
    properties:
      name:
        type: string
      value:
        type: string
  Stream:
    type: object
    properties:
      id:
        type: string
  User:
    description: User record.
    type: object
    properties:
      id:
        type: integer
        format: int64
      emailAddress:
        type: string
        format: email
  UserV2:
    description: User record version 2
    type: object
    properties:
      id:
        type: integer
        format: int64
      emailAddress:
        type: string
        format: email
      firstName:
        type: string
      lastName:
        type: string
      displayName:
        type: string
      title:
        type: string
      company:
        type: string
      username:
        type: string
      location:
        type : string
      avatars:
        description: 'avatar urls for both original size and small size'
        $ref: '#/definitions/AvatarList'
      workPhoneNumber:
        type: string
        description: 'Note: only available if the application has the extended user or contact permission'
      mobilePhoneNumber:
        type: string
        description: 'Note: only available if the application has the extended user or contact permission'
      jobFunction:
        type: string
        description: 'Note: only available if the application has the extended user or contact permission'
      department:
        type: string
        description: 'Note: only available if the application has the extended user or contact permission'
      division:
        type: string
        description: 'Note: only available if the application has the extended user or contact permission'
  UserSearchResults:
    type: object
    properties:
      count:
        description: The total number of users which matched the search criteria.
        type: integer
        format: int64
      skip:
        description: The number of skipped results.
        type: integer
        format: int64
      limit:
        description: The number of returned results.
        type: integer
        format: int64
      searchQuery:
        type: object
        description: The search query that produced this result.
        $ref: '#/definitions/UserSearchQuery'
      users:
        description: A list of users which matched by the search criteria.
        type: array
        items:
          $ref: '#/definitions/UserV2'
  UserSearchFilter:
    type: object
    properties:
      title:
        type: string
        description: user's job title
      company:
        type: string
        description: company name
      location:
        type: string
        description: city of the user's job location
  UserSearchQuery:
    type: object
    properties:
      query:
        type: string
        description: search / query term.  This can be firstname, lastname, displayname or email
      filters:
        description: query filters
        $ref: '#/definitions/UserSearchFilter'
  UserIdList:
    type: array
    items:
        type: integer
        format: int64
  UserId:
    type: object
    properties:
      id:
        type: integer
        format: int64
  StringId:
    type: object
    properties:
      id:
        type: string
  RoomAttributes:
    type: object
    properties:
      name:
        type: string
        description: Room name.
      description:
        type: string
        description: Room description.
      membersCanInvite:
        type: boolean
        description: If true, any chatroom participant can add new participants. If false, only owners can add new participants.
      discoverable:
        type: boolean
        description: If true, this chatroom (name, description and messages) can be searched and listed by non-participants. If false, only participants can search this room.
  V2RoomAttributes:
    type: object
    properties:
      name:
        type: string
        description: Room name.
      keywords:
        type: array
        description: Keywords for search to use to find this room
        items:
          $ref: '#/definitions/RoomTag'
      description:
        type: string
        description: Room description.
      membersCanInvite:
        type: boolean
        description: If true, any chatroom participant can add new participants. If false, only owners can add new participants.
      discoverable:
        type: boolean
        description: If true, this chatroom (name, description and messages) can be searched and listed by non-participants. If false, only participants can search this room.
      public:
        type: boolean
        description: If true, this is a public chatroom. IF false, a private chatroom.
      readOnly:
        type: boolean
        description: If true, only stream owners can send messages.
      copyProtected:
        type: boolean
        description: If true, clients disable the clipboard copy for content in this stream.
  RoomSearchCriteria:
    description: Room Query Object. Used to specify the parameters for room search.
    properties:
      query:
        description: The search query. Matches the room name and description.
        type: string
      labels:
        description: A list of room tag labels whose values will be queried.
        type: array
        items:
          type: string
      active:
        description: Restrict the search to active/inactive rooms. If unspecified, search all rooms.
        type: boolean
      private:
        description: Restrict the search to private rooms. If unspecified, search all rooms.
        type: boolean
      owner:
        description: Restrict the search to rooms owned by the specified user ID.
        $ref: '#/definitions/UserId'
      creator:
        description: Restrict the search to rooms created by the specified user ID.
        $ref: '#/definitions/UserId'
      member:
        description: Restrict the search to rooms having the specified user ID as member.
        $ref: '#/definitions/UserId'
      sortOrder:
        description: |
          Sort algorithm to be used. Supports two values: "BASIC" (legacy algorithm)
          and "RELEVANCE" (enhanced algorithm).
        type: string
        enum:
          - BASIC
          - RELEVANCE
    required:
    - query
  RoomSearchResults:
    description: A list of search results and counts per search parameter.
    properties:
      count:
        description: The total number of rooms matched by the search.
        type: integer
        format: int64
      skip:
        description: The number of skipped results.
        type: integer
      limit:
        description: The number of returned results.
        type: integer
      query:
        description: The search query that produced this result.
        $ref: '#/definitions/RoomSearchCriteria'
      rooms:
        description: A list of rooms matched by the query.
        type: array
        items:
          $ref: '#/definitions/V2RoomDetail'
      facetedMatchCount:
        description: Detailed counts of matched rooms per search criterion.
        type: array
        items:
          $ref: '#/definitions/FacetedMatchCount'
  RoomTag:
    description: Room Tag object. A key:value pair describing additional properties of the room.
    properties:
      key:
        description: A unique label of the Tag.
        type: string
      value:
        description: The value of this Tag's label.
        type: string
    required:
    - key
    - value
  FacetedMatchCount:
    description: An object respresenting the result count of faceted search.
    properties:
      facet:
        description: The matched query.
        type: string
      count:
        description: The result count.
        type: integer
  RoomSystemInfo:
    type: object
    properties:
     id:
        type: string
     creationDate:
        type: integer
        format: int64
        description: The datetime when the stream was originally created. Milliseconds since Jan 1 1970.
     createdByUserId:
        type: integer
        format: int64
     active:
        type: boolean
        description: If false, no messages can be sent in this stream, and membership is locked.
  ImmutableRoomAttributes:
    type: object
    description: These attributes cannot be changed once the room has been created
    properties:
      public:
        type: boolean
        description: If true, this is a public chatroom. IF false, a private chatroom.
      readOnly:
        type: boolean
        description: If true, only stream owners can send messages.
      copyProtected:
        type: boolean
        description: If true, clients disable the clipboard copy for content in this stream.
  RoomDetail:
    type: object
    properties:
      roomAttributes:
        $ref: '#/definitions/RoomAttributes'
      roomSystemInfo:
        $ref: '#/definitions/RoomSystemInfo'
      immutableRoomAttributes:
        $ref: '#/definitions/ImmutableRoomAttributes'
  V2RoomDetail:
    type: object
    properties:
      roomAttributes:
        $ref: '#/definitions/V2RoomAttributes'
      roomSystemInfo:
        $ref: '#/definitions/RoomSystemInfo'
  SuccessResponse:
    type: object
    properties:
      format:
        type: string
        enum:
          - TEXT
          - XML
      message:
        type: string
  AvatarUpdate:
    type: object
    properties:
      image:
        description: Base64 encoded image. Original image must be less than 2MB.
        type: string
  Avatar:
    type: object
    properties:
      size:
        description: 'The Avatar Size'
        type: string
      url:
        description: 'Url of the image'
        type: string
  AvatarList:
    type: array
    items:
     $ref: '#/definitions/Avatar'
  UserStatus:
    type: object
    properties:
      status:
        type: string
        enum:
          - ENABLED
          - DISABLED
  UserFilter:
    type: object
    properties:
      email:
        type: string
      name:
        type: string
      department:
        type: string
      title:
        type: string
      role:
        type: string
        format: long
      status:
        type: string
        enum:
          - ENABLED
          - DISABLED
      usertype:
        type: string
        enum:
          - NORMAL
          - SYSTEM
          - TW
      location:
        type: string
  PasswordReset:
    type: object
    properties:
      type:
        type: string
        enum:
          - EMAIL
  FeatureList:
    type: array
    items:
     $ref: '#/definitions/Feature'
  Feature:
    description: Entitlement feature record.
    type: object
    properties:
      entitlment:
        type: string
      enabled:
        type: boolean
        description: Whether this entitlement is enabled for the user.
  Group:
    description: Information Barrier Group record.
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      active:
        type: boolean
      memberCount:
        type: integer
        format: int32
      policies:
        type: array
        items:
          type: string
      createdDate:
        type: integer
        format: int64
      modifiedDate:
        type: integer
        format: int64
  Product:
    description: Application Product
    type: object
    required:
      - name
      - sku
      - type
      - subscribed
    properties:
      appId:
        type: string
        description: App ID for the Product
      name:
        type: string
        minLength: 1
        maxLength: 50
        description: Product Name
      sku:
        type: string
        minLength: 1
        maxLength: 100
        description: Product SKU
      subscribed:
        type: boolean
        description: indicate whether the product is subscribed or not
      type:
        type: string
        description: Product Type (default or premium)
  ProductList:
    type: array
    items:
      $ref: '#/definitions/Product'
  PolicyList:
    type: array
    items:
      $ref: '#/definitions/Policy'
  Policy:
    description: Information Barrier Policy record.
    type: object
    properties:
      id:
        type: string
      policyType:
        type: string
        enum:
          - BLOCK
          - ALLOW
      active:
        type: boolean
      memberCount:
        type: integer
        format: int32
      groups:
        type: array
        items:
          type: string
      createdDate:
        type: integer
        format: int64
      modifiedDate:
        type: integer
        format: int64
  UserAppEntitlement:
    description: Application Entitlements for the user
    type: object
    required:
      - appId
      - listed
      - install
    properties:
      appId:
        type: string
        description: Unique ID for the Application
        maxLength: 32
        minLength: 1
      appName:
        type: string
        description: Name for this Application
        maxLength: 50
        minLength: 1
      listed:
        type: boolean
        description: if true, this application will be listed in the appstore for this user.  Otherwise, this application will be hidden in the appstore.
      install:
        type: boolean
        description: if true, it indicate this application is installed for this user.  Otherwise, this user does not have this application installed.
      products:
        $ref: '#/definitions/ProductList'
  PodAppEntitlement:
    description: Application Entitlements for the company
    type: object
    required:
      - appId
      - appName
      - enable
      - listed
      - install
    properties:
      appId:
        type: string
        description: Unique ID for the Application
        maxLength: 32
        minLength: 1
      appName:
        type: string
        description: Name for this Application
        maxLength: 50
        minLength: 1
      enable:
        type: boolean
      listed:
        type: boolean
        description: if true, this application will be listed in the appstore for everyone.  Otherwise, this application will be hidden in the appstore.
      install:
        type: boolean
        description: if true, the entitlement is set to automatic for the company.  Otherwise, it is set to manual.
  Role:
    description: Role record.
    type: object
    properties:
      id:
        type: string
        format: long
      name:
        type: string
      description:
        type: string
  RoleDetailList:
    type: array
    items:
      $ref: '#/definitions/RoleDetail'
  RoleDetail:
    description: Role detailed.
    type: object
    properties:
      id:
        type: string
        format: long
      name:
        type: string
      userTypes:
        type: array
        items:
          type: string
      optionalActions:
        type: array
        items:
          type: string
  GroupList:
    type: array
    items:
      $ref: '#/definitions/Group'
  UserAppEntitlementList:
    type: array
    items:
      $ref: '#/definitions/UserAppEntitlement'
  PodAppEntitlementList:
    type: array
    items:
      $ref: '#/definitions/PodAppEntitlement'
  RoleList:
    type: array
    items:
      $ref: '#/definitions/Role'
  IntegerList:
    type: array
    items:
        type: integer
        format: int64
  StringList:
    type: array
    items:
        type: string
  DisclaimerList:
    type: array
    items:
      $ref: '#/definitions/Disclaimer'
  Disclaimer:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      content:
        type: string
      frequencyInHours:
        type: integer
        format: int32
      isDefault:
        type: boolean
      isActive:
        type: boolean
      createdDate:
        type: integer
        format: int64
      modifiedDate:
        type: integer
        format: int64
      format:
        type: string
        enum:
          - TEXT
          - XML
  DelegateAction:
    type: object
    properties:
      userId:
        type: integer
        format: int64
      action:
        type: string
        enum:
          - ADD
          - REMOVE
  UserInfo:
    description: User record.
    type: object
    properties:
      user:
        $ref: '#/definitions/UserAttributes'
      userSystemInfo:
        $ref: '#/definitions/UserSystemInfo'
  UserDetail:
    description: Detailed User record.
    type: object
    properties:
      userAttributes:
        $ref: '#/definitions/UserAttributes'
      userSystemInfo:
        $ref: '#/definitions/UserSystemInfo'
      features:
        $ref: '#/definitions/IntegerList'
      apps:
        $ref: '#/definitions/IntegerList'
      groups:
        $ref: '#/definitions/IntegerList'
      roles:
        $ref: '#/definitions/StringList'
      disclaimers:
        $ref: '#/definitions/IntegerList'
      avatar:
        $ref: '#/definitions/Avatar'
  UserAttributes:
    description: User record.
    type: object
    properties:
      emailAddress:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      userName:
        type: string
      displayName:
        type: string
      department:
        type: string
      division:
        type: string
      title:
        type: string
      workPhoneNumber:
        type: string
      mobilePhoneNumber:
        type: string
      smsNumber:
        type: string
      accountType:
        type: string
        enum:
          - NORMAL
          - SYSTEM
      location:
        type: string
      jobFunction:
        type: string
      assetClasses:
        type: array
        items:
          type: string
      industries:
        type: array
        items:
          type: string
  UserCreate:
    description: User Creation Object. After creation, modify roles, features etc via the specific API calls.
    type: object
    properties:
      userAttributes:
        $ref: '#/definitions/UserAttributes'
      password:
        $ref: '#/definitions/Password'
      roles:
        type: array
        items:
          type: string
  UserSystemInfo:
    description: User Status Information.
    type: object
    properties:
      id:
        type: integer
        format: int64
      status:
        type: string
        enum:
          - ENABLED
          - DISABLED
      createdDate:
        type: integer
        format: int64
      createdBy:
        type: string
      lastUpdatedDate:
        type: integer
        format: int64
      lastLoginDate:
        type: integer
        format: int64
      lastPasswordReset:
        type: integer
        format: int64
  UserDetailList:
    type: array
    items:
      $ref: '#/definitions/UserDetail'
  Password:
    description: Password. Stored as derived password in both the Pod and the Key Manager using PBKDF2 function. Number of iterations should be 10000 and desired length 256 bits.
    type: object
    properties:
      hSalt:
        description: Pod password salt used for PBKDF2 derivation.
        type: string
      hPassword:
        description: Pod password derived with PBKDF2.
        type: string
      khSalt:
        description: Key Manager password salt used for PBKDF2 derivation.
        type: string
      khPassword:
        description: Key Manager password derived with PBKDF2.
        type: string
  MemberInfo:
    description: Detailed membership record.
    type: object
    properties:
      id:
        type: integer
        format: int64
      owner:
        type: boolean
      joinDate:
        type: integer
        format: int64
  MembershipList:
    description: List of members in a room.
    type: array
    items:
      $ref: '#/definitions/MemberInfo'
  V2MemberUserDetail:
    description: User detail information for stream membership
    type: object
    properties:
      userId:
        type: integer
        format: int64
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      displayName:
        type: string
        description: Display name for the user
      company:
        type: string
        description: Company name
      companyId:
        type: integer
        description: Company ID
      isExternal:
        type: boolean
        description: true indicate that this user belong to another company
  V2MemberInfo:
    description: Detailed membership record.
    type: object
    properties:
      user:
        description: User detail information include names, userId, email, etc
        $ref: '#/definitions/V2MemberUserDetail'
      isOwner:
        type: boolean
        description: true if this is an owner of the room
      isCreator:
        type: boolean
        description: true if this is the creator of the room
      joinDate:
        description: unix timestamp for join date
        type: integer
        format: int64
  V2MemberInfoList:
    type: array
    items:
      $ref: '#/definitions/V2MemberInfo'
  V2MembershipList:
    description: List of members in the stream.
    type: object
    properties:
      count:
        type: integer
        description: total members count
      skip:
        type: integer
        description: number of items to skip from the request
      limit:
        type: integer
        description: maximum number of items to return
      members:
        $ref: '#/definitions/V2MemberInfoList'
  MessageSuppressionResponse:
    description: The suppression state of a message
    type: object
    properties:
      messageId:
        type: string
      suppressed:
        type: boolean
      suppressionDate:
        type: integer
        format: int64
        description: The date when this message was suppressed.
  BulkActionResult:
    description: |
      The results of list based bulk action. The list contains the result messages
      in the same order as submitted. The message will be an empty string if the action
      was successful for item in that index.
    properties:
      overallResult:
        type: string
        enum:
          - SUCCESS
          - FAIL
      results:
        type: array
        items:
          type: string
  UserConnectionRequest:
    type: object
    description: Request body for the Connection APIs
    properties:
      userId:
        type: integer
        format: int64
        description: user id
  UserConnection:
    type: object
    description: Connection status between two users
    properties:
      userId:
        type: integer
        format: int64
        description: user id
      status:
        type: string
        description: Connection status between the requesting user and the request sender
        enum:
          - PENDING_INCOMING
          - PENDING_OUTGOING
          - ACCEPTED
          - REJECTED
      firstRequestedAt:
        type: integer
        format: int64
        description: unix timestamp when the first request was made
      updatedAt:
        type: integer
        format: int64
        description: unix timestamp on the last updated date
      requestCounter:
        type: integer
        format: int32
        description: number of requests made
  UserConnectionList:
    type: array
    items:
      $ref: '#/definitions/UserConnection'
  StreamList:
    description: A list of streams of which the requesting user is a member.
    type: array
    items:
      $ref: '#/definitions/StreamAttributes'
  StreamAttributes:
    type: object
    properties:
      id:
        type: string
        description: The stream ID.
      crossPod:
        type: boolean
        description: If true, this is a cross-pod stream.
      active:
        type: boolean
        description: If true, this stream is active.
      streamType:
        description: The type of the stream (IM, multi-IM, chat room, user wall).
        $ref: '#/definitions/StreamType'
      streamAttributes:
        description: Additional stream details applicable to IMs, MIMs and user walls.
        $ref: '#/definitions/ConversationSpecificStreamAttributes'
      roomAttributes:
        description: Additional stream details applicable to chatrooms.
        $ref: '#/definitions/RoomSpecificStreamAttributes'
  StreamType:
    type: object
    properties:
      type:
        type: string
        enum:
          - IM
          - MIM
          - ROOM
          - POST
  ConversationSpecificStreamAttributes:
    type: object
    properties:
      members:
        description: User IDs of the participants of the stream.
        $ref: '#/definitions/UserIdList'
  RoomSpecificStreamAttributes:
    type: object
    properties:
      name:
        type: string
        description: Room name.
  StreamFilter:
    description: Stream filtering parameters.
    properties:
      streamTypes:
        description: Types of streams to search for.
        type: array
        items:
          $ref: '#/definitions/StreamType'
      includeInactiveStreams:
        description: Whether to include inactive streams in the list of results.
        type: boolean
  AdminStreamFilter:
    description: stream filter criteria
    type: object
    properties:
      streamTypes:
        description: type of streams to search for
        type: array
        items:
          $ref: '#/definitions/AdminStreamTypeEnum'
      scope:
        description: scope of the room.  If not specified, it will include both Internal and External scope
        type: string
        enum:
          - INTERNAL
          - EXTERNAL
      origin:
        description: |
          Origin of the room. It indicate whether the room was created by a user
          within the company by another company.  If not specified, it will
          include both Internal and External origin
        type: string
        enum:
          - INTERNAL
          - EXTERNAL
      status:
        description: Status of the room. If not specified, it will include both Active and Inactive status
        type: string
        enum:
          - ACTIVE
          - INACTIVE
      privacy:
        description: Privacy setting of the stream.  If not specified, it will include both public and private stream
        type: string
        enum:
          - PUBLIC
          - PRIVATE
      startDate:
        description: Start date in unix timestamp in millseconds
        type: integer
        format: int64
      endDate:
        description: End date in unix timestamp in millseconds.  If not specified, it assume to be current time.
        type: integer
        format: int64
  AdminStreamTypeEnum:
    type: object
    properties:
      type:
        type: string
        enum:
          - IM
          - MIM
          - ROOM
  AdminStreamInfo:
    description: Stream information
    type: object
    properties:
      id:
        type: string
        description: stream id
      isExternal:
        type: boolean
        description: true indicate this stream has the scope of external and false indictate this stream has the scope of internal
      isActive:
        type: boolean
        description: true indicate that this stream has the status of active and false indicate this stream has the scope of inactive
      isPublic:
        type: boolean
        description: true indicate that this stream has a privacy setting of public.  This only apply a ROOM stream type.
      type:
        type: string
        description: type of stream (IM, MIM, ROOM)
      attributes:
        description: additional optional properties of the stream
        $ref: '#/definitions/AdminStreamAttributes'
  AdminStreamAttributes:
      description: additional optional properties for the stream
      type: object
      properties:
        roomName:
          type: string
          description: room name (room only)
        roomDescription:
          type: string
          description: description of the room (room only)
        members:
          type: array
          description: list of userid who is member of the stream - im or mim only
          items:
            type: integer
            format: int64
        createdByUserId:
          type: integer
          format: int64
          description: creator user id
        createdDate:
          type: integer
          format: int64
          description: created date
        lastModifiedDate:
          type: integer
          format: int64
          description: last modified date
        originCompany:
          type: string
          description: company name of the creator
        originCompanyId:
          type: integer
          description: company id of the creator
        membersCount:
          type: integer
          description: total number of members in the stream
  AdminStreamInfoList:
    type: array
    description: list of stream info
    items:
      $ref: '#/definitions/AdminStreamInfo'
  AdminStreamList:
    description: list of streams info
    type: object
    properties:
      count:
        type: integer
        format: int64
        description: total number of streams which match the filter criteria
      skip:
        type: integer
        description: number of streams skipped
      limit:
        type: integer
        description: maximum number of streams return
      filter:
        description: filter criteria used in the request
        $ref: '#/definitions/AdminStreamFilter'
      streams:
        description: list of streams
        $ref: '#/definitions/AdminStreamInfoList'
  AdminJustifiedUserAction:
    type: object
    properties:
      userId:
        description: The userId of the target user.
        type: integer
        format: int64
      justification:
        description: The reason for the requested action.
        type: string
  MessageStatusUser:
    type: object
    properties:
      userId:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      displayName:
        type: string
      email:
        type: string
      userName:
        type: string
      timestamp:
        type: string
  MessageStatus:
    description: |
      Holds the status of a particular message, indicating which user the message has been sent, delivered or read.
    type: object
    properties:
      read:
        description: All users who have read that message, in any Symphony client.
        type: array
        items:
          $ref: '#/definitions/MessageStatusUser'
      delivered:
        description: |
          All users who have at least one Symphony client to which the message has been delivered, and not read yet.
        type: array
        items:
          $ref: '#/definitions/MessageStatusUser'
      sent:
        description: |
          All users to whom the message has been sent and received by the Symphony system,
          but not yet delivered to any user's Symphony client.
        type: array
        items:
          $ref: '#/definitions/MessageStatusUser'
  ApplicationInfo:
    description: |
      Required information for creating an application.
    type: object
    properties:
      appId:
        description: An unique id for the application.
        type: string
      name:
        description: User defined name for the application.
        type: string
      appUrl:
        description: The url for the app. Must start with "https://".
        type: string
      domain:
        description: Domain for app, that must match app url domain.
        type: string
      publisher:
        description: The publisher for this application.
        type: string
  ApplicationDetail:
    description: Detailed record of application.
    type: object
    properties:
      applicationInfo:
        description: Required info for the creation of an application.
        $ref: '#/definitions/ApplicationInfo'
      id:
        description: An unique id, used for for updating, getting and deleting an application.
        type: string
      iconUrl:
        description: Url to a icon to use for app. Must start with "https://".
        type: string
      description:
        description: Description of the application.
        type: string
      allowOrigins:
        description: |
          The permitted domains to send or receive a request from.
          The field is for the purpose of CORS which set the app specific "ALLOW-ORIGIN-DOMAINS" header in HTTP.
        type: string
      permissions:
        description: |
          List of application permissions provisioned for the application
          Accepted values:
            - SEND_MESSAGES
            - GET_USER_CONNECTIONS
            - REQUEST_USER_CONNECTIONS
            - SET_PRESENCE
            - GET_PRESENCE
            - GET_BASIC_USER_INFO
            - GET_EXTENDED_USER_INFO
            - GET_BASIC_CONTACT_INFO
            - GET_EXTENDED_CONTACT_INFO
            - ACT_AS_USER
        type: array
        items:
          type: string
      cert:
        description: The app public certificate in pem format.
        type: string
  V2PresenceList:
    type: array
    items:
      $ref: '#/definitions/V2Presence'
  V2Presence:
    allOf:
      - $ref: '#/definitions/V2UserPresence'
      - type: object
        properties:
          timestamp:
            type: integer
            format: int64
            description: The time, in milliseconds since Jan 1 1970, when the presence state was set.
  V2UserPresence:
    allOf:
      - $ref: '#/definitions/V2PresenceStatus'
      - type: object
        properties:
          userId:
            type: integer
            format: int64
            description: The ID of the user to whom the presence state relates.
  V2PresenceStatus:
    type: object
    properties:
      category:
        type: string
        description: |
          Presence status. Possible values are:
            - UNDEFINED
            - AVAILABLE
            - BUSY
            - DO_NOT_DISTURB
            - ON_THE_PHONE
            - BE_RIGHT_BACK
            - IN_A_MEETING
            - AWAY
            - OUT_OF_OFFICE
            - OFF_WORK
            - OFFLINE
    required:
      - category

