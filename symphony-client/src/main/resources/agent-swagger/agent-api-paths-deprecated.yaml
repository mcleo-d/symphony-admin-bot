#
# Deprecated paths
#
  '/v1/datafeed/create':
    post:
      deprecated: true
      summary: Create a new real time message event stream.
      description: |
          A datafeed provides the messages in all conversations that a user is in.
          System messages like new users joining a chatroom are not part of the datafeed.

          A datafeed will expire after if it isn't read before its capacity is reached.
      parameters:
        - name: sessionToken
          description: Session authentication token.
          in: header
          required: true
          type: string
        - name: keyManagerToken
          description: Key Manager authentication token.
          in: header
          required: true
          type: string
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Datafeed
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Datafeed'
          headers:
            X-Warning:
              description: This method is deprecated
              type: string
        '400':
          description: 'Client error.'
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: 'Unauthorized: Session tokens invalid.'
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: 'Forbidden: Caller lacks necessary entitlement.'
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: 'Server error, see response body for further details.'
          schema:
            $ref: '#/definitions/Error'
  '/v1/datafeed/{id}/read':
    get:
      deprecated: true
      summary: Read a given datafeed.
      description: |
          Read messages from the given datafeed. If no more messages are available then this method will block.
          It is intended that the client should re-call this method as soon as it has processed the messages
          received in the previous call. If the client is able to consume messages more quickly than they become
          available then each call will initially block, there is no need to delay before re-calling this method.

          A datafeed will expire if its unread capacity is reached.
          A datafeed can only be consumed by one client thread at a time. E.g. polling the datafeed by two threads may lead to messages being delivered out of order.
      parameters:
      - name: id
        description: |
          Datafeed ID
        in: path
        required: true
        type: string
      - name: maxMessages
        description: |
            Max No. of messages to return.
        in: query
        type: integer
      - name: sessionToken
        description: Session authentication token.
        in: header
        required: true
        type: string
      - name: keyManagerToken
        description: Key Manager authentication token.
        in: header
        required: true
        type: string
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Datafeed
      responses:
        '200':
          description: List of messages that have occurred since last time this URL was polled. If the list is empty, it means the request has reached its timeout, and the client should poll again.
          schema:
            $ref: '#/definitions/MessageList'
          headers:
            X-Warning:
              description: This method is deprecated
              type: string
        '204':
          description: No Messages.
        '400':
          description: 'Client error, see response body for further details.'
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: 'Unauthorized: Session tokens invalid.'
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: 'Forbidden: Caller lacks necessary entitlement.'
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: 'Server error, see response body for further details.'
          schema:
            $ref: '#/definitions/Error'
  '/v1/HealthCheck':
    get:
      deprecated: true
      summary: Checks the health of the Agent.
      description: |
          Used to validate the configuration of the agent.
          Makes a request to the HealthCheck on the Symphony cloud.
          Makes a request to the HealthCheck on the Key Manager service.
      produces:
        - application/json
      tags:
        - System
      responses:
        '200':
          description: The Agent is functioning properly.
          schema:
            $ref: '#/definitions/V1HealthCheckResponse'
          headers:
            X-Warning:
              description: This method is deprecated
              type: string
  '/v2/datafeed/{id}/read':
    get:
      deprecated: true
      summary: Read a given datafeed.
      description: |
          Read messages from the given datafeed. If no more messages are available then this method will block.
          It is intended that the client should re-call this method as soon as it has processed the messages
          received in the previous call. If the client is able to consume messages more quickly than they become
          available then each call will initially block, there is no need to delay before re-calling this method.

          A datafeed will expire if its unread capacity is reached.
          A datafeed can only be consumed by one client thread at a time. E.g. polling the datafeed by two threads may lead to messages being delivered out of order.
      parameters:
      - name: id
        description: |
          Datafeed ID
        in: path
        required: true
        type: string
      - name: maxMessages
        description: |
            Max No. of messages to return.
        in: query
        type: integer
      - name: sessionToken
        description: Session authentication token.
        in: header
        required: true
        type: string
      - name: keyManagerToken
        description: Key Manager authentication token.
        in: header
        required: true
        type: string
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Datafeed
      responses:
        '200':
          description: List of messages that have occurred since last time this URL was polled. If the list is empty, it means the request has reached its timeout, and the client should poll again.
          schema:
            $ref: '#/definitions/V2MessageList'
          headers:
            X-Warning:
              description: This method is deprecated
              type: string
        '204':
          description: No Messages.
        '400':
          description: 'Client error, see response body for further details.'
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: 'Unauthorized: Session tokens invalid.'
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: 'Forbidden: Caller lacks necessary entitlement.'
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: 'Server error, see response body for further details.'
          schema:
            $ref: '#/definitions/Error'
  '/v1/message/import':
    post:
      deprecated: true
      summary: Import messages from other systems into Symphony.
      description: |
        Sends a message to be imported into the system.
        Allows you to override the timestamp and author of the message with your desired values.
        The requesting user must have the Content Management role.
        The user that the message is intended to have come from must also be present in the conversation.
        The intended message timestamp must be a valid time from the past. It cannot be a future timestamp.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: sessionToken
          description: Session authentication token.
          in: header
          required: true
          type: string
        - name: keyManagerToken
          description: Key Manager authentication token.
          in: header
          required: true
          type: string
        - name: messageList
          in: body
          required: true
          schema:
            $ref: '#/definitions/MessageImportList'
      tags:
        - Messages
      responses:
        '200':
          description: Message sent.
          schema:
            $ref: '#/definitions/ImportResponseList'
          headers:
            X-Warning:
              description: This method is deprecated
              type: string
        '400':
          description: 'Client error, see response body for further details.'
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: 'Unauthorized: Session tokens invalid.'
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: 'Forbidden: Caller lacks necessary entitlement.'
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: 'Server error, see response body for further details.'
          schema:
            $ref: '#/definitions/Error'
  '/v2/message/import':
    post:
      deprecated: true
      summary: Import messages from other systems into Symphony.
      description: |
        Sends a message to be imported into the system.
        Allows you to override the timestamp and author of the message with your desired values.
        The requesting user must have the Content Management role.
        The user that the message is intended to have come from must also be present in the conversation.
        The intended message timestamp must be a valid time from the past. It cannot be a future timestamp.
        Optionally the original message ID can be specified to identify the imported message for the purpose of repeat imports.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: sessionToken
          description: Session authentication token.
          in: header
          required: true
          type: string
        - name: keyManagerToken
          description: Key Manager authentication token.
          in: header
          required: true
          type: string
        - name: messageList
          in: body
          required: true
          schema:
            $ref: '#/definitions/V2MessageImportList'
      tags:
        - Messages
      responses:
        '200':
          description: Message sent.
          schema:
            $ref: '#/definitions/V2ImportResponseList'
          headers:
            X-Warning:
              description: This method is deprecated
              type: string
        '400':
          description: 'Client error, see response body for further details.'
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: 'Unauthorized: Session tokens invalid.'
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: 'Forbidden: Caller lacks necessary entitlement.'
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: 'Server error, see response body for further details.'
          schema:
            $ref: '#/definitions/Error'
  '/v1/stream/{sid}/attachment/create':
    post:
      deprecated: true
      summary: Upload an attachment.
      description: |
        Upload an attachment to the given stream. The stream can be a chatroom,
        an IM or a multiparty IM.

        Once uploaded, you can use this attachment on a message you send in that stream.

        If the attachment is uploaded then 200 is returned.
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: sid
          description: Stream ID
          in: path
          required: true
          type: string
        - name: sessionToken
          description: Session authentication token.
          in: header
          required: true
          type: string
        - name: keyManagerToken
          description: Key Manager authentication token.
          in: header
          required: true
          type: string
        - name: file
          description: The attachment body.
          in: formData
          required: true
          type: file
      tags:
        - Attachments
      responses:
        '200':
          description: 'Upload successful, return the attachment ID.'
          schema:
            $ref: '#/definitions/AttachmentInfo'
          headers:
            X-Warning:
              description: This method is deprecated
              type: string
        '400':
          description: 'Client error, see response body for further details.'
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: 'Unauthorized: Session tokens invalid.'
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: 'Forbidden: Caller lacks necessary entitlement.'
          schema:
            $ref: '#/definitions/Error'
        '422':
          description: 'Unprocessable entity: The submitted data could not be processed.'
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: 'Server error, see response body for further details.'
          schema:
            $ref: '#/definitions/Error'
  '/v3/stream/{sid}/attachment/create':
    post:
      deprecated: true
      summary: PROVISIONAL - Upload an attachment.
      description: |
        Upload an attachment to the given stream. The stream can be a chatroom,
        an IM or a multiparty IM.

        Once uploaded, you can use this attachment on a message you send in that stream.

        If the attachment is uploaded then 200 is returned.
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: sid
          description: Stream ID
          in: path
          required: true
          type: string
        - name: sessionToken
          description: Session authentication token.
          in: header
          required: true
          type: string
        - name: keyManagerToken
          description: Key Manager authentication token.
          in: header
          required: false
          type: string
        - name: file
          description: The attachment body.
          in: formData
          required: true
          type: file
      tags:
        - Attachments
      responses:
        '200':
          description: 'Upload successful, return the attachment ID.'
          schema:
            $ref: '#/definitions/AttachmentInfo'
          headers:
            X-Warning:
              description: This method is deprecated
              type: string
        '400':
          description: 'Client error, see response body for further details.'
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: 'Unauthorized: Session tokens invalid.'
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: 'Forbidden: Caller lacks necessary entitlement.'
          schema:
            $ref: '#/definitions/Error'
        '422':
          description: 'Unprocessable entity: The submitted data could not be processed.'
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: 'Server error, see response body for further details.'
          schema:
            $ref: '#/definitions/Error'
  '/v1/stream/{sid}/message':
    get:
      deprecated: true
      summary: Get messages from an existing stream.
      description: |
          A caller can fetch all unseen messages by passing the timestamp of
          the last message seen as the since parameter and the number of messages
          with the same timestamp value already seen as the skip parameter. This
          means that every message will be seen exactly once even in the case that
          an additional message is processed with the same timestamp as the last
          message returned by the previous call, and the case where there are
          more than maxMessages with the same timestamp value.

          This method is intended for historic queries and is generally reliable
          but if guaranteed delivery of every message in real time is required
          then the equivilent firehose method should be called.
      produces:
        - application/json
      parameters:
        - name: sid
          description: |
            Stream ID
          in: path
          required: true
          type: string
        - name: since
          description: |
            Timestamp of first required message.

            This is a long integer value representing milliseconds since
            Jan 1 1970
          in: query
          required: true
          type: integer
          format: int64
        - name: offset
          description: |
            No. of messages to skip.
          in: query
          type: integer
        - name: maxMessages
          description: |
            Max No. of messages to return. If no value is provided, 50 is the default.
          in: query
          type: integer
          required: false
        - name: sessionToken
          description: Session authentication token.
          in: header
          required: true
          type: string
        - name: keyManagerToken
          description: Key Manager authentication token.
          in: header
          required: true
          type: string
      tags:
        - Messages
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MessageList'
          headers:
            X-Warning:
              description: This method is deprecated
              type: string
        '204':
          description: No Messages.
        '400':
          description: 'Client error, see response body for further details.'
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: 'Unauthorized: Session tokens invalid.'
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: 'Forbidden: Caller lacks necessary entitlement.'
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: 'Server error, see response body for further details.'
          schema:
            $ref: '#/definitions/Error'
  '/v2/stream/{sid}/message':
    get:
      deprecated: true
      summary: Get messages from an existing stream.
      description: |
          A caller can fetch all unseen messages by passing the timestamp of
          the last message seen as the since parameter and the number of messages
          with the same timestamp value already seen as the skip parameter. This
          means that every message will be seen exactly once even in the case that
          an additional message is processed with the same timestamp as the last
          message returned by the previous call, and the case where there are
          more than maxMessages with the same timestamp value.

          This method is intended for historic queries and is generally reliable
          but if guaranteed delivery of every message in real time is required
          then the equivilent firehose method should be called.
      produces:
        - application/json
      parameters:
        - name: sid
          description: |
            Stream ID
          in: path
          required: true
          type: string
        - name: since
          description: |
            Timestamp of first required message.

            This is a long integer value representing milliseconds since
            Jan 1 1970
          in: query
          required: true
          type: integer
          format: int64
        - name: offset
          description: |
            No. of messages to skip.
          in: query
          type: integer
        - name: limit
          description: |
            Max No. of messages to return. If no value is provided, 50 is the default.
          in: query
          type: integer
          required: false
        - name: sessionToken
          description: Session authentication token.
          in: header
          required: true
          type: string
        - name: keyManagerToken
          description: Key Manager authentication token.
          in: header
          required: true
          type: string
      tags:
        - Messages
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/V2MessageList'
          headers:
            X-Warning:
              description: This method is deprecated
              type: string
        '204':
          description: No Messages.
        '400':
          description: 'Client error, see response body for further details.'
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: 'Unauthorized: Session tokens invalid.'
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: 'Forbidden: Caller lacks necessary entitlement.'
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: 'Server error, see response body for further details.'
          schema:
            $ref: '#/definitions/Error'
  '/v1/stream/{sid}/message/create':
    post:
      deprecated: true
      summary: Post a message to one existing stream.
      description: |
        Post a new message to the given stream. The stream can be a chatroom,
        an IM or a multiparty IM.

        If the message parameter type is TEXT then the message contains plain
        text and cannot include formating, hash tags, mentions etc.

        If the message parameter type is MessageML then the message contains
        MessageML which allows for these entities.

        If the message is in MessageML and fails schema validation
        a client error results

        If the message is sent then 200 is returned.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: sid
          description: Stream ID
          in: path
          required: true
          type: string
        - name: sessionToken
          description: Session authentication token.
          in: header
          required: true
          type: string
        - name: keyManagerToken
          description: Key Manager authentication token.
          in: header
          required: true
          type: string
        - name: message
          in: body
          required: true
          schema:
            $ref: '#/definitions/MessageSubmission'
      tags:
        - Messages
      responses:
        '200':
          description: Message sent.
          schema:
            $ref: '#/definitions/Message'
          headers:
            X-Warning:
              description: This method is deprecated
              type: string
        '400':
          description: 'Client error, see response body for further details.'
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: 'Unauthorized: Session tokens invalid.'
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: 'Forbidden: Caller lacks necessary entitlement.'
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: 'Server error, see response body for further details.'
          schema:
            $ref: '#/definitions/Error'
  '/v2/stream/{sid}/message/create':
    post:
      deprecated: true
      summary: Post a message to one existing stream.
      description: |
        Post a new message to the given stream. The stream can be a chatroom,
        an IM or a multiparty IM.

        You may include an attachment on the message (see the V2MessageSubmission parameter).

        If the message parameter type is TEXT then the message contains plain
        text and cannot include formating, hash tags, mentions etc.

        If the message parameter type is MessageML then the message contains
        MessageML which allows for these entities.

        If the message is in MessageML and fails schema validation
        a client error results

        If the message is sent then 200 is returned.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: sid
          description: Stream ID
          in: path
          required: true
          type: string
        - name: sessionToken
          description: Session authentication token.
          in: header
          required: true
          type: string
        - name: keyManagerToken
          description: Key Manager authentication token.
          in: header
          required: true
          type: string
        - name: message
          in: body
          required: true
          schema:
            $ref: '#/definitions/V2MessageSubmission'
      tags:
        - Messages
      responses:
        '200':
          description: Message sent.
          schema:
            $ref: '#/definitions/V2Message'
          headers:
            X-Warning:
              description: This method is deprecated
              type: string
        '400':
          description: 'Client error, see response body for further details.'
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: 'Unauthorized: Session tokens invalid.'
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: 'Forbidden: Caller lacks necessary entitlement.'
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: 'Server error, see response body for further details.'
          schema:
            $ref: '#/definitions/Error'
  '/v3/stream/{sid}/message/create':
    post:
      deprecated: true
      summary: PROVISIONAL - Post a message to one existing stream.
      description: |
        Post a new message to the given stream. The stream can be a chatroom,
        an IM or a multiparty IM.

        You may include an attachment on the message (see the V2MessageSubmission parameter).

        If the message parameter type is TEXT then the message contains plain
        text and cannot include formating, hash tags, mentions etc.

        If the message parameter type is MessageML then the message contains
        MessageML which allows for these entities.

        If the message is in MessageML and fails schema validation
        a client error results

        If the message is sent then 200 is returned.

        Regarding authentication, you must either use the sessionToken which was created for delegated app access
        or both the sessionToken and keyManagerToken together.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: sid
          description: Stream ID
          in: path
          required: true
          type: string
        - name: sessionToken
          description: Authorization token used to make delegated calls.
          in: header
          required: true
          type: string
        - name: keyManagerToken
          description: Key Manager authentication token.
          in: header
          required: false
          type: string
        - name: message
          in: body
          required: true
          schema:
            $ref: '#/definitions/V2MessageSubmission'
      tags:
        - Messages
      responses:
        '200':
          description: Message sent.
          schema:
            $ref: '#/definitions/V2Message'
          headers:
            X-Warning:
              description: This method is deprecated
              type: string
        '400':
          description: 'Client error, see response body for further details.'
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: 'Unauthorized: Session tokens invalid.'
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: 'Forbidden: Caller lacks necessary entitlement.'
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: 'Server error, see response body for further details.'
          schema:
            $ref: '#/definitions/Error'
  '/v1/stream/{sid}/share':
    post:
      deprecated: true
      summary: Share a piece of content into Symphony
      description: |
        Given a 3rd party content (eg. news article), it can share to the given stream.
        The stream can be a chatroom, an IM or a multiparty IM.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: sid
          description: Stream ID
          in: path
          required: true
          type: string
        - name: sessionToken
          description: Session authentication token.
          in: header
          required: true
          type: string
        - name: keyManagerToken
          description: Key Manager authentication token.
          in: header
          required: true
          type: string
        - name: shareContent
          in: body
          required: true
          schema:
            $ref: '#/definitions/ShareContent'
      tags:
        - Share
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/V2Message'
          headers:
            X-Warning:
              description: This method is deprecated
              type: string
        '400':
          description: 'Client error, see response body for further details.'
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: 'Unauthorized: Session tokens invalid.'
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: 'Forbidden: Caller lacks necessary entitlement.'
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: 'Server error, see response body for further details.'
          schema:
            $ref: '#/definitions/Error'
  '/v1/util/obsolete':
    post:
      deprecated: true
      summary: Example of a deprecated endpoint, returns input.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: sessionToken
          description: Session authentication token.
          in: header
          required: true
          type: string
        - name: keyManagerToken
          description: Key Manager authentication token.
          in: header
          required: true
          type: string
        - name: echoInput
          description: |
            Message in plain text
          in: body
          required: true
          schema:
            $ref: '#/definitions/SimpleMessage'
      tags:
        - Util
      responses:
        '200':
          description: Message sent.
          schema:
            $ref: '#/definitions/SimpleMessage'
          headers:
            X-Warning:
              description: This method is deprecated
              type: string
        '400':
          description: 'Client error, see response body for further details.'
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: 'Unauthorized: Session tokens invalid.'
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: 'Forbidden: Caller lacks necessary entitlement.'
          schema:
            $ref: '#/definitions/Error'
        '420':
          description: 'Gone. Returned when the option to hard fail deprecated methods is enabled'
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: 'Server error, see response body for further details.'
          schema:
            $ref: '#/definitions/Error'
